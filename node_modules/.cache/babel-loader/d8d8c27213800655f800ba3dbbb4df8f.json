{"remainingRequest":"/Users/sunbelife/Desktop/Magic_Screen_Vue/node_modules/thread-loader/dist/cjs.js!/Users/sunbelife/Desktop/Magic_Screen_Vue/node_modules/babel-loader/lib/index.js!/Users/sunbelife/Desktop/Magic_Screen_Vue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/sunbelife/Desktop/Magic_Screen_Vue/src/lib/http/index.js","dependencies":[{"path":"/Users/sunbelife/Desktop/Magic_Screen_Vue/src/lib/http/index.js","mtime":1567477924790},{"path":"/Users/sunbelife/Desktop/Magic_Screen_Vue/node_modules/cache-loader/dist/cjs.js","mtime":1567478406959},{"path":"/Users/sunbelife/Desktop/Magic_Screen_Vue/node_modules/thread-loader/dist/cjs.js","mtime":1567478407932},{"path":"/Users/sunbelife/Desktop/Magic_Screen_Vue/node_modules/babel-loader/lib/index.js","mtime":1567478391825},{"path":"/Users/sunbelife/Desktop/Magic_Screen_Vue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1567478404665}],"contextDependencies":[],"result":["'use strict';\n/**\n * 统一获取http数据\n * Created by yaoze on 2017/2/17.\n */\n\nimport axios from 'axios'; // 引入 axios 组件\n\nimport querystring from 'querystring'; // 使用体积更小的 querystring 替代 qs 以进行表单提交\n\nimport vueJsonp from 'vue-jsonp'; // 引入jsonp方法\n// 创建 axios 实例\n\nvar http = axios.create({\n  baseURL: process.env.VUE_APP_API_URL,\n  // api 的 base_url，后台开发/本地调试时不需要指定\n  // timeout: 5000                  // 请求超时时间，后台开发不需要指定，响应时间如果真的太长的话，锤子比配置好使\n  // 将 post 转成 form-urlencoded 的形式, 否则 post 过去的数据会是 json 形式，php 无法识别\n  transformRequest: [function (data, headers) {\n    if (headers['Content-Type'] === 'application/x-www-form-urlencoded') {\n      // 把一个参数对象格式化为一个字符串\n      return querystring.stringify(data);\n    } else if (headers['Content-Type'] === 'multipart/form-data;charset=UTF-8') {\n      return data;\n    } else {\n      headers['Content-Type'] = 'application/json';\n    }\n\n    return data;\n  }],\n  // 设置post类型\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  withCredentials: true // FUCK CORS\n\n}); // vue-jsonp 的调用方式和axios一致\n// 因为 vue-json 是一个vue插件，所以需要用hack的方式主动调用install方法进行安装\n// 添加 jsonp 方法, 默认超时时间:60s\n\nvueJsonp.install(http, 60000); // respone拦截器\n\nhttp.interceptors.response.use( // 响应成功\nfunction (response) {\n  var data = response.data; // 打印响应值\n  // console.log('receive response => ')\n  // console.log(response)\n\n  if (response.status === 200) {\n    return data;\n  } else {\n    // 异常响应\n    // console.log('服务器状态码不为200,返回response,留待程序自行处理')\n    return response;\n  }\n}, // 响应失败\nfunction (error) {\n  // 一般情况下，只要服务器返回的状态码不是2XX或者304,都会报这个错误\n  // console.log('服务器响应错误')\n  // console.log('error.message => ')\n  // console.log(error.message)\n  if (error.request) {// console.log('请求信息:')\n    // console.log(error.request)\n  }\n\n  var returnError = error;\n\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    // console.log('响应内容:')\n    // console.log(error.response)\n    returnError = error.response;\n\n    switch (error.response.status) {\n      case 403:\n        break;\n    }\n  } else {\n    // console.log('没有响应内容')\n    returnError = Promise.reject(error);\n  }\n\n  return returnError;\n});\nexport default http;",null]}